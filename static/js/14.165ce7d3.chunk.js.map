{"version":3,"sources":["api/rx.ts","User/Submissions/Submissions.tsx"],"names":["getApi$","path","Observable","subscriber","withUnsubscriber","snap","next","val","filterFeed$","feed$","predicate","limit","arguments","length","undefined","Infinity","pipe","map","items","id","concat","getItem$","item$s","item$$","from","flatMap","_ref","round","Math","sqrt","parallel","clamp","lastFiltered","item$","first","filter","item","index","take","toArray","left","Submissions","Bind","state","loading","this","_subscribe","prevProps","reload","props","amount","_unsubscribe","setState","react_default","a","createElement","Fragment","_renderEmptyPlaceholder","_renderComments","_renderSubmissions","index_es","_renderPager","_this$state","t","container","spacing","alignItems","direction","variant","aria-label","Headline","expanded","key","justify","onClick","_more","_this$props","history","push","SubmissionsRoute","makeURL","_getAmount","dead","deleted","type","by","_this2","_subscription","_predicate","subscribe","_ref2","unsubscribe","Component","withNamespaces","withRouter"],"mappings":"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","file":"static/js/14.165ce7d3.chunk.js","sourcesContent":["import { from, Observable, Subscriber, TeardownLogic } from 'rxjs'\nimport { filter, first, flatMap, map, take, toArray } from 'rxjs/operators'\nimport { clamp } from '../util'\nimport { withUnsubscriber } from './firebase'\nimport { Item, ItemId, Items, Snapshot, UserId } from './types'\n\nfunction getApi$<T>(path: string): Observable<T> {\n  return new Observable(\n    (subscriber: Subscriber<T>): TeardownLogic => {\n      return withUnsubscriber(path, (snap: Snapshot<T>) => {\n        subscriber.next(snap.val())\n      })\n    },\n  )\n}\n\nexport function getItem$(id: ItemId): Observable<Item> {\n  return getApi$(`item/${id}`)\n}\n\nexport function getUserSubmissions$(id: UserId): Observable<Items> {\n  return getApi$(`user/${id}/submitted`)\n}\n\ninterface WithLeft {\n  left: number\n  items: Item[]\n}\n\nexport function filterFeed$(\n  feed$: Observable<Items>,\n  predicate: (item: Item) => boolean,\n  limit: number = Infinity,\n): Observable<WithLeft> {\n  interface WithLength {\n    length: number\n    item$$: Observable<Observable<Item>>\n  }\n\n  return feed$.pipe(\n    map((items: Items) => items.map((id: ItemId) => getItem$(id))),\n    map(\n      (item$s: Array<Observable<Item>>): WithLength => ({\n        length: item$s.length,\n        item$$: from(item$s),\n      }),\n    ),\n    flatMap(({ length, item$$ }: WithLength) => {\n      const { round, sqrt }: typeof Math = Math\n      const parallel: number = clamp(round(sqrt(length)), 1, limit)\n      let lastFiltered: number = 0\n\n      return item$$.pipe(\n        flatMap((item$: Observable<Item>) => item$.pipe(first()), parallel),\n        filter((item: Item, index: number) => {\n          lastFiltered = index\n          return predicate(item)\n        }),\n        take(limit),\n        toArray(),\n        map(\n          (items: Item[]): WithLeft => ({\n            items,\n            left: length - lastFiltered - 1,\n          }),\n        ),\n      )\n    }),\n  )\n}\n","import { Button, Grid, LinearProgress, Typography } from '@material-ui/core'\nimport { Bind } from 'lodash-decorators'\nimport React, { Component, ReactNode } from 'react'\nimport { withNamespaces, WithNamespaces } from 'react-i18next'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { Subscription } from 'rxjs'\nimport { filterFeed$, getUserSubmissions$ } from '../../api/rx'\nimport { Item, UserId } from '../../api/types'\nimport Headline from '../../Headline/Headline'\nimport SubmissionsRoute, {\n  Filter,\n} from '../../routes/UserRoute/SubmissionsRoute/SubmissionsRoute'\n\ninterface SubmissionsProps {\n  id: UserId\n  filter: Filter\n  amount?: number\n}\n\ninterface SubmissionsState {\n  items: Item[]\n  left: number\n  loading: boolean\n}\n\nconst PAGE_SIZE: number = 30\n\nclass Submissions extends Component<\n  SubmissionsProps & RouteComponentProps & WithNamespaces,\n  SubmissionsState\n> {\n  public state: SubmissionsState = { items: [], left: 0, loading: true }\n  private _subscription?: Subscription\n\n  public componentDidMount(): void {\n    this._subscribe()\n  }\n\n  public componentDidUpdate(prevProps: SubmissionsProps): void {\n    const reload: boolean =\n      this.props.id !== prevProps.id || this.props.filter !== prevProps.filter\n    if (reload || this.props.amount !== prevProps.amount) {\n      this._unsubscribe()\n      this._subscribe()\n      this.setState({ loading: true })\n    }\n\n    if (reload) {\n      this.setState({ items: [], left: 0 })\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._unsubscribe()\n  }\n\n  public render(): ReactNode {\n    return (\n      <>\n        {this._renderEmptyPlaceholder()}\n        {this.props.filter === 'comments'\n          ? this._renderComments()\n          : this._renderSubmissions()}\n        {this.state.loading ? <LinearProgress /> : null}\n        {this._renderPager()}\n      </>\n    )\n  }\n\n  private _renderEmptyPlaceholder(): ReactNode {\n    const { loading, items }: this['state'] = this.state\n    const { t }: this['props'] = this.props\n\n    return loading || items.length ? null : (\n      <Grid container spacing={16} alignItems=\"center\" direction=\"column\">\n        <Grid item>\n          <Typography variant=\"h6\">{t('empty')}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h4\" aria-label={t('shrugLabel')}>\n            {t('shrug')}\n          </Typography>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  private _renderComments(): ReactNode {\n    return this.state.items.map((item: Item) => (\n      <Headline item={item} expanded key={item.id} />\n    ))\n  }\n\n  private _renderSubmissions(): ReactNode {\n    return this.state.items.map((item: Item) => (\n      <Headline item={item} key={item.id} />\n    ))\n  }\n\n  private _renderPager(): ReactNode {\n    return this.state.left ? (\n      <Grid container spacing={8} justify=\"center\">\n        <Grid item>\n          <Button onClick={this._more}>{this.props.t('more')}</Button>\n        </Grid>\n      </Grid>\n    ) : null\n  }\n\n  @Bind()\n  private _more(): void {\n    const { id, filter }: this['props'] = this.props\n\n    this.props.history.push(\n      SubmissionsRoute.makeURL({\n        filter,\n        id,\n        amount: this._getAmount() + PAGE_SIZE,\n      }),\n    )\n  }\n\n  private _getAmount(): number {\n    return this.props.amount || PAGE_SIZE\n  }\n\n  @Bind()\n  private _predicate({ dead, deleted, type, by }: Item): boolean {\n    if (dead || deleted || !by) return false\n\n    switch (this.props.filter) {\n      case 'comments':\n        return type === 'comment'\n      case 'submissions':\n        return type !== 'comment' && type !== 'pollopt'\n    }\n  }\n\n  private _subscribe(): void {\n    this._subscription = filterFeed$(\n      getUserSubmissions$(this.props.id),\n      this._predicate,\n      this._getAmount(),\n    ).subscribe(({ items, left }: { items: Item[]; left: number }) => {\n      this.setState({ items, left, loading: false })\n    })\n  }\n\n  private _unsubscribe(): void {\n    if (this._subscription) {\n      this._subscription.unsubscribe()\n    }\n  }\n}\n\nexport default withNamespaces('Submissions')(withRouter(Submissions))\n"],"sourceRoot":""}