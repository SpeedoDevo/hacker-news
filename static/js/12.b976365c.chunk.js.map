{"version":3,"sources":["Comment/Comment.tsx","Thread/Thread.tsx"],"names":["Comment","Bind","Memoize","react_default","a","createElement","WithUpdates","from","this","_subscribe","props","id","_renderComment","comment","_this","by","text","time","dead","deleted","_this$props","classes","storage","t","nodeId","concat","WithToggle","initial","get","onChange","_onToggle","collapsed","toggle","index_es","container","className","root","component","item","barContainer","bar","onClick","aria-label","aria-controls","aria-expanded","content","aria-hidden","variant","color","inline","Link","key","href","UserRoute","makeURL","ItemRoute","Time","distance","Object","toConsumableArray","expandButton","disableRipple","Fragment","ContentHtml","_renderKids","kids","map","kid","Self","_this$props2","set","delete","subscriber","getItem","Component","withStorage","SESSION","withNamespaces","withStyles","theme","& + &, & &","marginTop","spacing","unit","display","background","border","font","lineHeight","overflow","padding","outline","WebkitUserSelect","MozUserSelect","msUserSelect","&::-moz-focus-inner","width","height","minWidth","minHeight","boxShadow","shadows","cursor","borderLeft","grey","&:hover, &:focus, &:active","borderLeftColor","flex","marginRight","maxWidth","objectSpread","typography","caption","marginLeft","palette","secondary","fontWeight","fontWeightMedium","textDecoration","Thread","justify","direction","_renderItem","data","Headline","expanded","_renderComments","spacer","src_Comment_Comment","mixins","appMaxWidth","margin"],"mappings":"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","file":"static/js/12.b976365c.chunk.js","sourcesContent":["import { Button, Grid, Typography } from '@material-ui/core'\nimport { grey } from '@material-ui/core/colors'\nimport {\n  StyleRules,\n  StyleRulesCallback,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport { Bind, Memoize } from 'lodash-decorators'\nimport React, { Component, ComponentType, ReactNode } from 'react'\nimport { WithNamespaces, withNamespaces } from 'react-i18next'\nimport { getItem } from '../api'\nimport {\n  Comment as CommentType,\n  ItemId,\n  Subscriber,\n  Unsubscriber,\n} from '../api/types'\nimport ContentHtml from '../ContentHtml/ContentHtml'\nimport Link from '../Link/Link'\nimport {\n  SESSION,\n  withStorage,\n  WithStorage,\n} from '../Root/StorageProvider/StorageProvider'\nimport ItemRoute from '../routes/ItemRoute/ItemRoute'\nimport UserRoute from '../routes/UserRoute/UserRoute'\nimport Time from '../Time/Time'\nimport WithToggle from '../WithToggle/WithToggle'\nimport WithUpdates, { WithUpdatesFrom } from '../WithUpdates/WithUpdates'\n\ninterface CommentProps {\n  id: ItemId\n}\n\ntype CommentStorage = Record<ItemId, true>\n\nconst styles: StyleRulesCallback = (theme: Theme): StyleRules => ({\n  root: {\n    '& + &, & &': {\n      marginTop: theme.spacing.unit,\n    },\n  },\n  inline: {\n    display: 'inline-block',\n  },\n  bar: {\n    // reset\n    background: 'none',\n    border: 0,\n    color: 'inherit',\n    font: 'inherit',\n    lineHeight: 'normal',\n    overflow: 'visible',\n    padding: 0,\n    outline: 'none',\n    WebkitUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    '&::-moz-focus-inner': {\n      border: 0,\n      padding: 0,\n    },\n    // end reset\n    width: '100%',\n    height: '100%',\n    minWidth: 0,\n    minHeight: 0,\n    boxShadow: theme.shadows[0],\n    cursor: 'pointer',\n    borderLeft: `${theme.spacing.unit / 4}px solid ${grey[400]}`,\n    '&:hover, &:focus, &:active': {\n      borderLeftColor: grey[600],\n    },\n  },\n  barContainer: {\n    flex: `0 0 ${theme.spacing.unit * 1.5}px`,\n    marginRight: theme.spacing.unit * 0.25,\n  },\n  content: {\n    flex: `1 0 0`,\n    maxWidth: `calc(100% - ${theme.spacing.unit * (1.5 + 0.25)}px)`,\n  },\n  expandButton: {\n    ...theme.typography.caption,\n    padding: 0,\n    minWidth: 0,\n    minHeight: 0,\n    marginLeft: theme.spacing.unit,\n    color: theme.palette.text.secondary,\n    '&:hover, &:focus, &:active': {\n      fontWeight: theme.typography.fontWeightMedium,\n      textDecoration: 'underline',\n    },\n  },\n})\n\nclass Comment extends Component<\n  CommentProps & WithStyles & WithStorage<CommentStorage> & WithNamespaces\n> {\n  public render(): ReactNode {\n    return (\n      <WithUpdates from={this._subscribe(this.props.id)}>\n        {this._renderComment}\n      </WithUpdates>\n    )\n  }\n\n  @Bind()\n  private _renderComment(comment?: CommentType): ReactNode {\n    if (!comment) return null\n    const { by, text, time, dead, deleted }: CommentType = comment\n    if (dead || deleted) return null\n    const { classes, storage, id, t }: this['props'] = this.props\n    const nodeId: string = `comment-${id}`\n\n    return (\n      <WithToggle initial={!!storage.get(id)} onChange={this._onToggle}>\n        {(collapsed: boolean, toggle: () => void): ReactNode => (\n          <Grid container className={classes.root} component=\"section\">\n            <Grid item className={classes.barContainer}>\n              <button\n                className={classes.bar}\n                onClick={toggle}\n                aria-label={t('collapse')}\n                aria-controls={nodeId}\n                aria-expanded={!collapsed}\n              />\n            </Grid>\n            <Grid\n              item\n              className={classes.content}\n              id={nodeId}\n              aria-hidden={collapsed}\n            >\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.inline}\n                component=\"aside\"\n              >\n                {[\n                  <Link\n                    key=\"user\"\n                    href={UserRoute.makeURL({ id: by })}\n                    className={classes.inline}\n                  >\n                    {by}\n                  </Link>,\n                  ' ',\n                  <Link\n                    key=\"time\"\n                    href={ItemRoute.makeURL({ id })}\n                    className={classes.inline}\n                  >\n                    <Time distance={time} />\n                  </Link>,\n                  ...(collapsed\n                    ? [\n                        ' ',\n                        <Button\n                          key=\"expand\"\n                          className={classes.expandButton}\n                          onClick={toggle}\n                          aria-label={t('expand')}\n                          disableRipple\n                        >\n                          [+]\n                        </Button>,\n                      ]\n                    : []),\n                ]}\n              </Typography>\n              {collapsed ? null : (\n                <>\n                  <ContentHtml>{text}</ContentHtml>\n                  {this._renderKids(comment)}\n                </>\n              )}\n            </Grid>\n          </Grid>\n        )}\n      </WithToggle>\n    )\n  }\n\n  private _renderKids(comment: CommentType): ReactNode {\n    return comment.kids\n      ? comment.kids.map((kid: ItemId) => <Self key={kid} id={kid} />)\n      : null\n  }\n\n  @Bind()\n  private _onToggle(collapsed: boolean): void {\n    const { storage, id }: this['props'] = this.props\n\n    if (collapsed) {\n      storage.set(id, true)\n    } else {\n      storage.delete(id)\n    }\n  }\n\n  @Bind()\n  @Memoize()\n  private _subscribe(id: ItemId): WithUpdatesFrom<CommentType> {\n    return (subscriber: Subscriber<CommentType>): Unsubscriber =>\n      getItem(id, subscriber)\n  }\n}\n\nconst Self: ComponentType<CommentProps> = withStorage('comment', SESSION)(\n  withNamespaces('Comment')(withStyles(styles)(Comment)),\n)\nexport default Self\n","import { Grid } from '@material-ui/core'\nimport {\n  StyleRules,\n  StyleRulesCallback,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core/styles'\nimport { Bind, Memoize } from 'lodash-decorators'\nimport React, { Component, ReactNode } from 'react'\nimport { getItem } from '../api'\nimport { Item, ItemId, Subscriber, Unsubscriber } from '../api/types'\nimport Comment from '../Comment/Comment'\nimport Headline from '../Headline/Headline'\nimport WithUpdates, { WithUpdatesFrom } from '../WithUpdates/WithUpdates'\n\nexport interface ThreadProps {\n  id: ItemId\n}\n\nconst styles: StyleRulesCallback = (theme: Theme): StyleRules => ({\n  container: {\n    maxWidth: theme.mixins.appMaxWidth,\n    padding: theme.spacing.unit,\n  },\n  spacer: {\n    margin: theme.spacing.unit,\n  },\n})\n\nclass Thread extends Component<ThreadProps & WithStyles> {\n  public render(): ReactNode {\n    const { classes, id }: this['props'] = this.props\n\n    return (\n      <Grid container justify=\"center\">\n        <Grid\n          item\n          container\n          direction=\"column\"\n          className={classes.container}\n          component=\"article\"\n        >\n          <WithUpdates from={this._subscribe(id)}>\n            {this._renderItem}\n          </WithUpdates>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  @Bind()\n  private _renderItem(data?: Item): ReactNode {\n    if (!data) return null\n\n    return (\n      <>\n        <Headline id={this.props.id} expanded />\n        {this._renderComments(data)}\n      </>\n    )\n  }\n\n  private _renderComments(data: Item): ReactNode {\n    if ('kids' in data) {\n      return (\n        <>\n          <span className={this.props.classes.spacer} />\n          {data.kids.map((kid: ItemId) => (\n            <Comment id={kid} key={kid} />\n          ))}\n        </>\n      )\n    }\n\n    return null\n  }\n\n  @Bind()\n  @Memoize()\n  private _subscribe(id: ItemId): WithUpdatesFrom<Item> {\n    return (subscriber: Subscriber<Item>): Unsubscriber =>\n      getItem(id, subscriber)\n  }\n}\n\nexport default withStyles(styles)(Thread)\n"],"sourceRoot":""}