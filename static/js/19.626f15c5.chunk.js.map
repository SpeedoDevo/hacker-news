{"version":3,"sources":["User/User.tsx","routes/UserRoute/SubmissionsRoute/SubmissionsRoute.tsx"],"names":["User","Bind","Memoize","react__WEBPACK_IMPORTED_MODULE_11___default","a","createElement","_WithUpdates_WithUpdates__WEBPACK_IMPORTED_MODULE_18__","from","this","_subscribe","props","id","_renderUser","user","undefined","_empty","_this$props","classes","t","created","karma","about","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","container","justify","item","className","usernameCaption","username","aria-labelledby","createdCaption","date","variant","mdi_material_ui__WEBPACK_IMPORTED_MODULE_10__","fontSize","aboutCaption","_ContentHtml_ContentHtml__WEBPACK_IMPORTED_MODULE_14__","links","component","_Link_Link__WEBPACK_IMPORTED_MODULE_16__","link","href","SubmissionsRoute","makeURL","filter","submissions","use","_EmptyPlaceholder_EmptyPlaceHolder__WEBPACK_IMPORTED_MODULE_15__","message","subscriber","getUser","Component","withNamespaces","withStyles","theme","Object","_Users_barnabasforgo_repos_hacker_news_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__","maxWidth","mixins","appMaxWidth","width","padding","spacing","unit","display","gridTemplateAreas","gridTemplateColumns","gridGap","concat","justifyItems","breakpoints","down","gridArea","alignItems","&.isActive::before","content","justifySelf","Submissions","lazy","Promise","all","__webpack_require__","e","then","bind","filters","URL","join","_ref","amount","withSuspense","react__WEBPACK_IMPORTED_MODULE_5___default","assign","Number","SimpleRouteConfig","__webpack_exports__"],"mappings":"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","file":"static/js/19.626f15c5.chunk.js","sourcesContent":["import { Grid, Typography } from '@material-ui/core'\nimport {\n  StyleRules,\n  StyleRulesCallback,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport { Bind, Memoize } from 'lodash-decorators'\nimport { Star } from 'mdi-material-ui'\nimport React, { Component, ReactNode } from 'react'\nimport { withNamespaces, WithNamespaces } from 'react-i18next'\nimport { getUser } from '../api'\nimport {\n  Subscriber,\n  Unsubscriber,\n  User as UserType,\n  UserId,\n} from '../api/types'\nimport ContentHtml from '../ContentHtml/ContentHtml'\nimport EmptyPlaceHolder from '../EmptyPlaceholder/EmptyPlaceHolder'\nimport Link from '../Link/Link'\nimport SubmissionsRoute from '../routes/UserRoute/SubmissionsRoute/SubmissionsRoute'\nimport { Optional } from '../types'\nimport WithUpdates, { WithUpdatesFrom } from '../WithUpdates/WithUpdates'\n\ninterface UserProps {\n  id: UserId\n}\n\nconst styles: StyleRulesCallback = (theme: Theme): StyleRules => ({\n  container: {\n    maxWidth: theme.mixins.appMaxWidth,\n    width: '100%',\n    padding: theme.spacing.unit,\n    display: 'grid',\n    gridTemplateAreas: `\n      \"usernameCaption  username     karma\"\n      \"createdCaption   created      karma\"\n      \"aboutCaption     about        about\"\n      \".                links        .\"\n      \"submissions      submissions  submissions\"`,\n    gridTemplateColumns: 'auto 1fr auto',\n    gridGap: `${theme.spacing.unit}px`,\n    justifyItems: 'start',\n    [theme.breakpoints.down('xs')]: {\n      gridTemplateAreas: `\n        \"karma            karma\"\n        \"usernameCaption  username\"\n        \"createdCaption   created\"\n        \"aboutCaption     about\"\n        \".                links\"\n        \"submissions      submissions\"`,\n      gridTemplateColumns: 'auto 1fr',\n    },\n  },\n  usernameCaption: {\n    gridArea: 'usernameCaption',\n  },\n  username: {\n    gridArea: 'username',\n  },\n  createdCaption: {\n    gridArea: 'createdCaption',\n  },\n  created: {\n    gridArea: 'created',\n  },\n  karma: {\n    gridArea: 'karma',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  aboutCaption: {\n    gridArea: 'aboutCaption',\n  },\n  about: {\n    gridArea: 'about',\n  },\n  links: {\n    gridArea: 'links',\n  },\n  link: {\n    '&.isActive::before': {\n      content: '\"> \"',\n    },\n  },\n  submissions: {\n    gridArea: 'submissions',\n    justifySelf: 'stretch',\n  },\n})\n\nclass User extends Component<UserProps & WithStyles & WithNamespaces> {\n  public render(): ReactNode {\n    return (\n      <WithUpdates from={this._subscribe(this.props.id)}>\n        {this._renderUser}\n      </WithUpdates>\n    )\n  }\n\n  @Bind()\n  private _renderUser(user?: Optional<UserType>): ReactNode {\n    if (user === undefined) return null\n    if (user === null) return this._empty()\n\n    const { classes, t }: this['props'] = this.props\n    const { id, created, karma, about }: UserType = user\n\n    return (\n      <>\n        <Grid container justify=\"center\">\n          <Grid item className={classes.container}>\n            <Typography className={classes.usernameCaption}>\n              {t('usernameCaption')}\n            </Typography>\n            <Typography\n              className={classes.username}\n              aria-labelledby={classes.usernameCaption}\n            >\n              {id}\n            </Typography>\n            <Typography className={classes.createdCaption}>\n              {t('createdCaption')}\n            </Typography>\n            <Typography\n              className={classes.created}\n              aria-labelledby={classes.createdCaption}\n            >\n              {t('shared:date', { date: created })}\n            </Typography>\n            <Typography className={classes.karma} variant=\"h4\">\n              <Star fontSize=\"inherit\" />\n              {karma}\n            </Typography>\n            <Typography className={classes.aboutCaption}>\n              {t('aboutCaption')}\n            </Typography>\n            <ContentHtml\n              className={classes.about}\n              aria-labelledby={classes.aboutCaption}\n            >\n              {about}\n            </ContentHtml>\n            <Typography className={classes.links} component=\"section\">\n              <Link\n                className={classes.link}\n                href={SubmissionsRoute.makeURL({\n                  id,\n                  filter: 'submissions',\n                })}\n              >\n                {t('submissions')}\n              </Link>\n              <Link\n                className={classes.link}\n                href={SubmissionsRoute.makeURL({ id, filter: 'comments' })}\n              >\n                {t('comments')}\n              </Link>\n            </Typography>\n            <section className={classes.submissions}>\n              {SubmissionsRoute.use()}\n            </section>\n          </Grid>\n        </Grid>\n      </>\n    )\n  }\n\n  private _empty(): ReactNode {\n    return <EmptyPlaceHolder message={this.props.t('empty')} />\n  }\n\n  @Bind()\n  @Memoize()\n  private _subscribe(id: UserId): WithUpdatesFrom<UserType> {\n    return (subscriber: Subscriber<UserType>): Unsubscriber =>\n      getUser(id, subscriber)\n  }\n}\n\nexport default withNamespaces('User')(withStyles(styles)(User))\n","import React, { lazy, ReactNode } from 'react'\nimport { UserId } from '../../../api/types'\nimport { AsString, SimpleRouteConfig, withSuspense } from '../../util'\n\n// tslint:disable-next-line:typedef\nconst Submissions = lazy(() => import('../../../User/Submissions/Submissions'))\n\nexport type Filter = 'submissions' | 'comments'\nconst filters: Filter[] = ['submissions', 'comments']\n\ninterface SubmissionsRouteParams {\n  id: UserId\n  filter: Filter\n  amount?: number\n}\n\nclass SubmissionsRoute extends SimpleRouteConfig<SubmissionsRouteParams> {\n  protected URL: string = `/user/:id/:filter(${filters.join(\n    '|',\n  )})/:amount(\\\\d+)?`\n  protected translateParams({\n    id,\n    filter,\n    amount,\n  }: AsString<SubmissionsRouteParams>): ReactNode {\n    return withSuspense(\n      <Submissions\n        amount={amount ? Number(amount) : undefined}\n        {...{ id, filter }}\n      />,\n    )\n  }\n}\n\nexport default new SubmissionsRoute()\n"],"sourceRoot":""}