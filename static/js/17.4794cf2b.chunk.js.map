{"version":3,"sources":["Paginated/Paginated.tsx","HeadlineList/HeadlineList.tsx"],"names":["Paginated","state","paginated","_this$props","this","props","data","children","pageSize","Math","floor","length","nextProps","_ref2","nextPaginated","_ref","page","begin","slice","paginate","arrayEquals","Component","ButtonLinkTo","to","react_default","a","createElement","Link","Object","assign","HeadlineList","Bind","WithUpdates","from","_getFeedReader","_paginated","_data","src_Paginated_Paginated","_getPage","_renderList","items","numberOfPages","classes","index_es","container","justify","item","component","className","list","map","id","card","key","Headline","_renderPager","t","direction","alignContent","disabled","FeedRoute","makeURL","feed","_getFeed","clamp","pager","getTopStories","getNewStories","getBestStories","getAskStories","getShowStories","getJobStories","withNamespaces","withStyles","theme","padding","margin","maxWidth","mixins","appMaxWidth","flexGrow","spacing","unit","display","alignItems","concat"],"mappings":"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","file":"static/js/17.4794cf2b.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react'\nimport { Optional } from '../types'\nimport { arrayEquals } from '../util'\n\ninterface PaginatedProps<T = unknown> {\n  data: T[]\n  page: number\n  pageSize: number\n  children: (paginated: T[], numberOfPages: number) => ReactNode\n}\n\ninterface PaginatedState<T = unknown> {\n  paginated: T[]\n}\n\nfunction paginate<T = unknown>({\n  data,\n  page,\n  pageSize,\n}: PaginatedProps<T>): T[] {\n  const begin: number = page * pageSize\n  return data.slice(begin, begin + pageSize)\n}\n\nclass Paginated<T = unknown> extends Component<\n  PaginatedProps<T>,\n  PaginatedState<T>\n> {\n  public static getDerivedStateFromProps<T = unknown>(\n    nextProps: PaginatedProps<T>,\n    { paginated }: PaginatedState<T>,\n  ): Optional<Partial<PaginatedState<T>>> {\n    const nextPaginated: T[] = paginate(nextProps)\n\n    return arrayEquals(paginated, nextPaginated)\n      ? null\n      : { paginated: nextPaginated }\n  }\n\n  public state: PaginatedState<T> = { paginated: [] }\n\n  public render(): ReactNode {\n    const { data, children, pageSize }: this['props'] = this.props\n\n    return children(\n      this.state.paginated,\n      Math.floor(((data.length || 1) - 1) / pageSize),\n    )\n  }\n}\n\nexport default Paginated\n","import { Button, Card, Grid, Typography } from '@material-ui/core'\nimport {\n  StyleRules,\n  StyleRulesCallback,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport { Bind } from 'lodash-decorators'\nimport React, { Component, ComponentType, ReactElement, ReactNode } from 'react'\nimport { WithNamespaces, withNamespaces } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport {\n  getAskStories,\n  getBestStories,\n  getJobStories,\n  getNewStories,\n  getShowStories,\n  getTopStories,\n} from '../api'\nimport { FeedReader, ItemId, Items } from '../api/types'\nimport Headline from '../Headline/Headline'\nimport Paginated from '../Paginated/Paginated'\nimport FeedRoute, { MainFeed } from '../routes/FeedRoute/FeedRoute'\nimport { Optional } from '../types'\nimport { clamp } from '../util'\nimport WithUpdates from '../WithUpdates/WithUpdates'\n\ninterface HeadlineListProps {\n  page?: number\n  feed?: MainFeed\n}\n\nconst PAGE_SIZE: number = 30\nconst styles: StyleRulesCallback = (theme: Theme): StyleRules => ({\n  list: {\n    padding: 0,\n    margin: 0,\n    maxWidth: theme.mixins.appMaxWidth,\n    flexGrow: 1,\n  },\n  card: {\n    padding: theme.spacing.unit,\n    margin: theme.spacing.unit,\n  },\n  pager: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: `0 ${theme.spacing.unit}px`,\n  },\n})\n\nfunction ButtonLinkTo(to: string): ComponentType {\n  return function LinkTo(props: {}): ReactElement<{}> {\n    return <Link to={to} {...props} />\n  }\n}\n\nclass HeadlineList extends Component<\n  HeadlineListProps & WithStyles & WithNamespaces\n> {\n  public render(): ReactNode {\n    return (\n      <WithUpdates from={this._getFeedReader()}>{this._paginated}</WithUpdates>\n    )\n  }\n\n  @Bind()\n  private _paginated(_data?: Optional<Items>): ReactNode {\n    const data: Items = _data || []\n    return (\n      <Paginated data={data} page={this._getPage()} pageSize={PAGE_SIZE}>\n        {this._renderList}\n      </Paginated>\n    )\n  }\n\n  @Bind()\n  private _renderList(items: Items, numberOfPages: number): ReactNode {\n    const { classes }: this['props'] = this.props\n\n    return (\n      <article>\n        <Grid container justify=\"center\">\n          <Grid item component=\"ul\" className={classes.list}>\n            {items.map(\n              (id: ItemId): ReactNode => (\n                <Card component=\"li\" className={classes.card} key={id}>\n                  <Headline id={id} />\n                </Card>\n              ),\n            )}\n            {this._renderPager(numberOfPages)}\n          </Grid>\n        </Grid>\n      </article>\n    )\n  }\n\n  private _renderPager(numberOfPages: number): ReactNode {\n    const { classes, t }: this['props'] = this.props\n\n    return numberOfPages ? (\n      <Grid\n        item\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignContent=\"center\"\n      >\n        <Grid item>\n          <Button\n            disabled={this._getPage() <= 0}\n            component={ButtonLinkTo(\n              FeedRoute.makeURL({\n                feed: this._getFeed(),\n                page: clamp(this._getPage() - 1, 0, numberOfPages),\n              }),\n            )}\n          >\n            {t('previous')}\n          </Button>\n        </Grid>\n        <Grid item className={classes.pager}>\n          <Typography>\n            {this._getPage()}\n            {' / '}\n            {numberOfPages}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            disabled={this._getPage() >= numberOfPages}\n            component={ButtonLinkTo(\n              FeedRoute.makeURL({\n                feed: this._getFeed(),\n                page: clamp(this._getPage() + 1, 0, numberOfPages),\n              }),\n            )}\n          >\n            {t('next')}\n          </Button>\n        </Grid>\n      </Grid>\n    ) : null\n  }\n\n  private _getPage(): number {\n    return this.props.page || 0\n  }\n\n  private _getFeed(): MainFeed {\n    return this.props.feed || 'top'\n  }\n\n  private _getFeedReader(): FeedReader {\n    const feed: MainFeed = this._getFeed()\n\n    switch (feed) {\n      case 'top':\n        return getTopStories\n      case 'new':\n        return getNewStories\n      case 'best':\n        return getBestStories\n      case 'ask':\n        return getAskStories\n      case 'show':\n        return getShowStories\n      case 'job':\n        return getJobStories\n    }\n  }\n}\n\nexport default withNamespaces('HeadlineList')(withStyles(styles)(HeadlineList))\n"],"sourceRoot":""}